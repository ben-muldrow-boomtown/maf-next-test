{"version":3,"file":"static/webpack/static/development/pages/form.js.edfc0c4276853b746526.hot-update.js","sources":["webpack:///./components/forms/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ContactForm from './contact';\n\nconst FormWrapper = () => {\n  // state for each attribute\n  const [currentPage, setCurrentPage] = useState(0);\n  const [fullName, setFullName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n\n  // simulate post body from multiple forms\n  const submitFullForm = () => {\n    console.log('post body', {\n      fullName,\n      phone,\n      email\n    })\n  }\n\n  // contact form\n  const submitContactForm = (event, fullName, phone, email) => {\n    event.preventDefault();\n    setFullName(fullName);\n    setPhone(phone);\n    setEmail(email);\n  }\n\n  // all form components\n  const forms = [\n    <ContactForm onSubmit={submitContactForm} />\n  ]\n\n  // handle paging between forms\n  const hasNextPage = currentPage < forms.length - 1;\n  const hasLastPage = currentPage > 0;\n  const nextPage = () => {\n    if (hasNextPage) {\n      setCurrentPage(currentPage + 1);\n    }\n  }\n  const lastPage = () => {\n    if (hasLastPage) {\n      setCurrentPage(currentPage - 1)\n    }\n  }\n\n  const readyToSubmit = !hasNextPage && phone && fullName && email;\n\n  // render 1 form at a time\n  return<div>\n    {forms[currentPage]}\n    <button disabled={!hasLastPage} onClick={lastPage}>last</button>\n    {readyToSubmit\n      ? <button onClick={submitFullForm}>submit all</button>\n      : <button disabled={!hasNextPage} onClick={nextPage}>next</button>\n    }\n  </div>\n}\n\nexport default FormWrapper;"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}