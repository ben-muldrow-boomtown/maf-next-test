{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminmuldrow/Code/maf-next-test/src/components/forms/contact/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { FormContext } from '../FormProvider';\n\nconst ContactForm = props => {\n  console.log('propz', props);\n\n  const updateField = (dispatch, e) => {\n    dispatch({\n      type: e.target.id,\n      key: e.target.id,\n      value: e.target.value\n    });\n  };\n\n  return __jsx(FormContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, ({\n    dispatch,\n    state\n  }) => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: \"fullName\",\n    type: \"text\",\n    placeholder: \"Full Name\",\n    onChange: e => updateField(dispatch, e),\n    value: state.fullName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    id: \"phone\",\n    type: \"phone\",\n    placeholder: \"8888888888\",\n    onChange: e => updateField(dispatch, e),\n    value: state.phone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"placeholder@email.com\",\n    onChange: e => updateField(dispatch, e),\n    value: state.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/benjaminmuldrow/Code/maf-next-test/src/components/forms/contact/index.js"],"names":["React","useState","FormContext","ContactForm","props","console","log","updateField","dispatch","e","type","target","id","key","value","state","fullName","phone","email"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAY;AAE9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;;AAEA,QAAMG,WAAW,GAAG,CAACC,QAAD,EAAWC,CAAX,KAAiB;AACnCD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAED,CAAC,CAACE,MAAF,CAASC,EADR;AAEPC,MAAAA,GAAG,EAAEJ,CAAC,CAACE,MAAF,CAASC,EAFP;AAGPE,MAAAA,KAAK,EAAEL,CAAC,CAACE,MAAF,CAASG;AAHT,KAAD,CAAR;AAKD,GAND;;AAQA,SACE,MAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAAC;AAACN,IAAAA,QAAD;AAAWO,IAAAA;AAAX,GAAD,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,WAAW,EAAC,WAA7C;AAAyD,IAAA,QAAQ,EAAEN,CAAC,IAAIF,WAAW,CAACC,QAAD,EAAWC,CAAX,CAAnF;AAAkG,IAAA,KAAK,EAAEM,KAAK,CAACC,QAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAA+B,IAAA,WAAW,EAAC,YAA3C;AAAwD,IAAA,QAAQ,EAAEP,CAAC,IAAIF,WAAW,CAACC,QAAD,EAAWC,CAAX,CAAlF;AAAiG,IAAA,KAAK,EAAEM,KAAK,CAACE,KAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAA+B,IAAA,WAAW,EAAC,uBAA3C;AAAmE,IAAA,QAAQ,EAAER,CAAC,IAAIF,WAAW,CAACC,QAAD,EAAWC,CAAX,CAA7F;AAA4G,IAAA,KAAK,EAAEM,KAAK,CAACG,KAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFJ,CADF;AAWD,CAvBD;;AAyBA,eAAef,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { FormContext } from '../FormProvider';\n\nconst ContactForm = (props) =>  {\n\n  console.log('propz', props);\n\n  const updateField = (dispatch, e) => {\n    dispatch({\n      type: e.target.id,\n      key: e.target.id,\n      value: e.target.value\n    });\n  }\n\n  return (\n    <FormContext.Consumer>\n      { ({dispatch, state}) =>\n        <div>\n          <input id=\"fullName\" type='text' placeholder='Full Name' onChange={e => updateField(dispatch, e)} value={state.fullName} />\n          <input id=\"phone\" type='phone' placeholder='8888888888' onChange={e => updateField(dispatch, e)} value={state.phone} />\n          <input id=\"email\" type='email' placeholder='placeholder@email.com' onChange={e => updateField(dispatch, e)} value={state.email} />\n        </div>\n      }\n    </FormContext.Consumer>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}