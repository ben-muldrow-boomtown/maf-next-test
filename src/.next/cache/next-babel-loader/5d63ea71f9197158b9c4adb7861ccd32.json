{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminmuldrow/Code/maf-next-test/src/components/forms/other/index.js\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\n\nconst OtherForm = props => {\n  const {\n    dispatch,\n    pageNumber\n  } = props;\n  const foodRef = useRef(null);\n\n  const updateField = (dispatch, e) => {\n    dispatch({\n      type: e.target.id,\n      payload: {\n        key: e.target.id,\n        value: e.target.value\n      }\n    });\n  }; // simple validation\n\n\n  const updateValidation = () => {\n    if (fullNameRef.current.value && phoneRef.current.value && emailRef.current.value) {\n      dispatch({\n        type: 'validation',\n        payload: {\n          pageNumber,\n          valid: true\n        }\n      });\n    } else {\n      dispatch({\n        type: 'validation',\n        payload: {\n          pageNumber,\n          valid: false\n        }\n      });\n    }\n  };\n\n  const onChange = e => {\n    updateField(dispatch, e);\n    updateValidation();\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"pick a food\"), __jsx(\"select\", {\n    id: \"food\",\n    placeholder: \"select one\",\n    onChange: onChange,\n    ref: foodRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"hot dog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"hot dog\"), __jsx(\"option\", {\n    value: \"sando\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"sando\")));\n};\n\nexport default OtherForm;","map":{"version":3,"sources":["/Users/benjaminmuldrow/Code/maf-next-test/src/components/forms/other/index.js"],"names":["React","useRef","OtherForm","props","dispatch","pageNumber","foodRef","updateField","e","type","target","id","payload","key","value","updateValidation","fullNameRef","current","phoneRef","emailRef","valid","onChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BF,KAAjC;AACA,QAAMG,OAAO,GAAGL,MAAM,CAAC,IAAD,CAAtB;;AAEA,QAAMM,WAAW,GAAG,CAACH,QAAD,EAAWI,CAAX,KAAiB;AACnCJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAED,CAAC,CAACE,MAAF,CAASC,EADR;AAEPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAEL,CAAC,CAACE,MAAF,CAASC,EADP;AAEPG,QAAAA,KAAK,EAAEN,CAAC,CAACE,MAAF,CAASI;AAFT;AAFF,KAAD,CAAR;AAOD,GARD,CAJ2B,CAc3B;;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAIC,WAAW,CAACC,OAAZ,CAAoBH,KAApB,IAA6BI,QAAQ,CAACD,OAAT,CAAiBH,KAA9C,IAAuDK,QAAQ,CAACF,OAAT,CAAiBH,KAA5E,EAAmF;AACjFV,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,YADC;AAEPG,QAAAA,OAAO,EAAE;AACPP,UAAAA,UADO;AAEPe,UAAAA,KAAK,EAAE;AAFA;AAFF,OAAD,CAAR;AAOD,KARD,MAQO;AACLhB,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,YADC;AAEPG,QAAAA,OAAO,EAAE;AACPP,UAAAA,UADO;AAEPe,UAAAA,KAAK,EAAE;AAFA;AAFF,OAAD,CAAR;AAOD;AACF,GAlBD;;AAoBA,QAAMC,QAAQ,GAAIb,CAAD,IAAO;AACtBD,IAAAA,WAAW,CAACH,QAAD,EAAWI,CAAX,CAAX;AACAO,IAAAA,gBAAgB;AACjB,GAHD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,QAAQ,EAAEM,QAHZ;AAIE,IAAA,GAAG,EAAEf,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,EAOE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CAFF,CADF;AAcD,CAvDD;;AAyDA,eAAeJ,SAAf","sourcesContent":["import React, { useRef } from 'react';\n\nconst OtherForm = (props) => {\n  const { dispatch, pageNumber } = props;\n  const foodRef = useRef(null);\n\n  const updateField = (dispatch, e) => {\n    dispatch({\n      type: e.target.id,\n      payload: {\n        key: e.target.id,\n        value: e.target.value\n      }\n    });\n  }\n\n  // simple validation\n  const updateValidation = () => {\n    if (fullNameRef.current.value && phoneRef.current.value && emailRef.current.value) {\n      dispatch({\n        type: 'validation',\n        payload: {\n          pageNumber,\n          valid: true\n        }\n      })\n    } else {\n      dispatch({\n        type: 'validation',\n        payload: {\n          pageNumber,\n          valid: false\n        }\n      })\n    }\n  }\n\n  const onChange = (e) => {\n    updateField(dispatch, e);\n    updateValidation();\n  }\n\n\n  return (\n    <div>\n      <label>pick a food</label>\n      <select\n        id=\"food\"\n        placeholder=\"select one\"\n        onChange={onChange}\n        ref={foodRef}\n      >\n        <option value=\"hot dog\">hot dog</option>\n        <option value=\"sando\">sando</option>\n      </select>\n    </div>\n  )\n}\n\nexport default OtherForm;\n"]},"metadata":{},"sourceType":"module"}